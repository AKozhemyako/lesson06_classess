print('Lottery nimbers')
numbers = []
import random
def main () :

    for x in range(9):
        numbers.append(random.randint(0, 9))

print(numbers)
#Задания для написания кода.
# 1. Общий объем продаж.Разработайте программу, которая просит пользователя ввести
# продажи магазина за каждый день недели. Суммы должны быть сохранены в списке.
# Примените цикл, чтобы вычислить общий объем продаж за неделю и показать результат
# Константа DAYS содержит количество дней 7, за которые мы соберем данные продаж.
DAYS = 7
week =[]
def main():
    sales = [0] * DAYS
    # Создать переменную, которая будет содержать индекс.
    index = 0
    print("Введите сумму продажи за день: ")

    while index < DAYS:
         print('День № ', index + 1, ': ',
          sep=' ', end=' ')
         sales[index] = float(input())
         index += 1
    print('суммы по дням:')
    for value in sales:
        index += value
        print(value)
        print(index)

main()
# 2. Генератор лотерейных чисел.Разработайте программу, которая генерирует семизначную
# комбинацию лотерейных чисел. Программа должна сгенерировать семь случайных
# чисел, каждое в диапазоне от О до 9, и присвоить каждое число элементу списка. (Случайные
# числа рассматривались в главе 5.) Затем напишите еще один цикл, который показывает
# содержимое списка.

#3. Статистика дождевых осадков. Разработайте программу, которая позволяет пользователю
#занести в список общее количество дождевых осадков за каждый из 12 месяцев.
#Программа должна вычислить и показать суммарное количество дождевых осадков за
#год, среднее ежемесячное количество дождевых осадков и месяцы с самым высоким и
#самым низким количеством дождевых осадков.

#4. Проrрамма анализа чисел. Разработайте программу, которая просит пользователя ввести
#ряд из 20 чисел. Программа должна сохранить числа в списке и затем показать приведенные
#ниже данные:
#• наименьшее число в списке;
#• наибольшее число в списке;
#• сумму чисел в списке;
#• среднее арифметическое значение чисел в списке.

#5.Проверка допустимости номера расходноrо счета. Среди исходного кода главы 7,
#а также в подпапке data "Решений задач по программированию" соответствующей главы
#вы найдете файл charge_accounts.txt. Этот файл содержит список допустимых номеров
#расходных счетов компании. Каждый номер счета представляет собой семизначное число,
#в частности 5658845.
#Напишите программу, которая считывает содержимое файла в список. Затем эта программа
#должна попросить пользователя ввести номер расходного счета. Программа
#должна определить, что номер является допустимым, путем его поиска в списке. Если
#число в списке имеется, то программа должна вывести сообщение, указывающее на то,
#что номер допустимый. Если числа в списке нет, то программа должна вывести сообщение,
#указывающее на то, что номер недопустимый

#6.Больше числа n. В программе напишите функцию, которая принимает два аргумента:
#список и число n. Допустим, что список содержит числа. Функция должна показать все
#числа в списке, которые больше n.