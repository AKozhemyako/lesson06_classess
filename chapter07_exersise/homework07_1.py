# 1 Выводим имена ученых
names = ['Эйнштейн', 'Ньютон', 'Коперник', 'Кеплер']
print('задание 1: ')
print(names)

#2 Переменная names ссылается на список. Написать цикл for, который выводит каждый элемент списка.
print('задание 2:')

for n in names:
    print(n)
#3 список numbersl имеет 100 элементов, а numbers2 является пустым списком.
# Напишите код, который копирует значения из списка numbersl в список numbers2.
print('задание 3:')
numbers1 = [0]*100 # создаем список со 100 элементами
numbers2 = [] # создаем пустой список
numbers2+=numbers1 # конкатенация, список1 прибавляется в пустой список2
print(numbers2) # выводим на печать результата конкатенации
# Составить блок-схему, которая демонстрирует общую логику суммирования значений в списке.
print('задание 4:')
#Напишите функцию, которая принимает список в качестве аргумента (допустим, что список
#содержит целые числа) и возвращает сумму значений в списке.
print('задание 5:')
def main():
    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]


#Допустим, что переменная names ссылается на список строковых значений. Напишите
#программный код, который определяет, находится ли имя 'Руби' в списке names. Если
#это так, то выведите сообщение 'Привет, Руби! ' . В противном случае выведите сообщение
#' Руби отсутствует ' .
print('задание 6:')
def main():
    names_language = ['Python', 'Ruby', 'Perl']
    search = input('Введите имя языка: ')
    if search in names_language:
        print('Привет', search,'!')
    else:
        print(search, 'отсутсутствует!')
main()

#Что напечатает приведенный ниже фрагмент кода?
print('задание 7:')
list1 = [40, 50, 60]
list2 = [10, 20, 30]
list3 = list1 + list2 # Конкатенация списков в list3
print(list3)

# Напишите инструкцию, которая создает двумерный список с 5 строками и 3 столбцами.
# Затем напишите вложенные циклы, которые получают от пользователя целочисленное
# значение для каждого элемента в списке.
print('задание 8:')

